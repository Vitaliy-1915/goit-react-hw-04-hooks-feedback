{"version":3,"sources":["components/StatisticCardTitle/StatisticCardTitle.styles.jsx","components/StatisticCardTitle/StatisticCardTitle.jsx","components/StatisticsSection/StatisticsSection.styles.jsx","components/StatisticsSection/StatisticsSection.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/StatisticsCard/StatisticsCard.styles.jsx","components/StatisticsCard/StatisticsCard.jsx","App.jsx","index.js"],"names":["StatisticCardTitleH2","styled","h2","StatisticCardTitle","title","StatisticsSectionContainer","section","StatisticsSection","children","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","StatisticsList","ul","StatisticsListItem","li","Statistics","good","neutral","bad","total","positivePercentage","StatisticCardContent","div","StatisticCard","useState","setGood","setNeutral","setBad","countTotalFeedback","Good","Neutral","Bad","Math","round","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAEaA,EAAuBC,IAAOC,GAAV,0J,OCMlBC,I,EAAAA,EAJf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OAAO,cAACJ,EAAD,UAAuBI,KCHnBC,EAA6BJ,IAAOK,QAAV,6LCMxBC,I,EAAAA,EAJf,YAA0C,IAAbC,EAAY,EAAZA,SAC3B,OAAO,cAACH,EAAD,UAA6BG,KCHzBC,EAASR,IAAOS,OAAV,8KCiBJC,I,IAAAA,EAhBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACN,EAAD,CAEEO,KAAK,SACLC,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,GAJIA,SCNFG,EAAiBjB,IAAOkB,GAAV,0FAMdC,EAAqBnB,IAAOoB,GAAV,yFCShBC,I,EAAAA,EAdf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAA2BG,KAC3B,eAACH,EAAD,uBAA8BI,KAC9B,eAACJ,EAAD,mBAA0BK,KAC1B,eAACL,EAAD,qBAA4BM,KAC5B,eAACN,EAAD,iCACsBO,SCTfC,EAAuB3B,IAAO4B,IAAV,uRCKlB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAsBMC,EAAqB,kBAAMZ,EAAOC,EAAUC,GAIlD,OACQ,cAAC,EAAD,UACE,eAACG,EAAD,WACE,cAAC,EAAD,CAAoBxB,MAAM,0BAE1B,cAAC,EAAD,CACEQ,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA/BU,SAACE,GAEvB,OAAQA,GACN,IAAK,OACHiB,GAAQ,SAAAI,GAAI,OAAIA,EAAO,KACvB,MAED,IAAK,UACJH,GAAW,SAAAI,GAAO,OAAIA,EAAU,KAChC,MAEF,IAAK,MACHH,GAAO,SAAAI,GAAG,OAAIA,EAAM,SAsBd,cAAC,EAAD,CAAoBlC,MAAM,eAEzB+B,IAAuB,EACtB,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBApB8BY,KAAKC,MAAc,IAAPjB,EAAcY,OAuB1D,yBC7CDM,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACZ,EAAD,OCFNa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc7530be.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const StatisticCardTitleH2 = styled.h2`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 35px;\n  padding: 30px;\n  margin: 0;\n  border-bottom: solid 1px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StatisticCardTitleH2 } from './StatisticCardTitle.styles';\n\nfunction StatisticCardTitle({ title }) {\n  return <StatisticCardTitleH2>{title}</StatisticCardTitleH2>;\n}\n\nexport default StatisticCardTitle;\n\nStatisticCardTitle.propTypes = {\n  title: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StatisticsSectionContainer = styled.section`\n  margin: 30px auto;\n  padding: 10px;\n  width: 700px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  background-color: #ffffff8b;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StatisticsSectionContainer } from './StatisticsSection.styles';\n\nfunction StatisticsSection({ children }) {\n  return <StatisticsSectionContainer>{children}</StatisticsSectionContainer>;\n}\n\nexport default StatisticsSection;\n\nStatisticsSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  border-radius: 3px;\n  margin: 25px;\n  padding: 8px 16px;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { Button } from './FeedbackOptions.styles';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(option => (\n        <Button\n          key={option}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n","import styled from '@emotion/styled';\n\nexport const StatisticsList = styled.ul`\n  background-color: #fff;\n  width: 600px;\n  height: 200px;\n`;\n\nexport const StatisticsListItem = styled.li`\n  text-align: start;\n  list-style: none;\n  padding: 10px;\n`;\n","import React from 'react';\nimport { StatisticsList, StatisticsListItem } from './Statistics.styles';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <StatisticsList>\n      <StatisticsListItem>Good: {good}</StatisticsListItem>\n      <StatisticsListItem>Neutral: {neutral}</StatisticsListItem>\n      <StatisticsListItem>Bad: {bad}</StatisticsListItem>\n      <StatisticsListItem>total: {total}</StatisticsListItem>\n      <StatisticsListItem>\n        Positive feedback: {positivePercentage}\n      </StatisticsListItem>\n    </StatisticsList>\n  );\n}\n\nexport default Statistics;\n","import styled from '@emotion/styled';\n\nexport const StatisticCardContent = styled.div`\n  /* font-style: normal;\n  font-weight: bold;\n  font-size: 35px; */\n  padding: 30px;\n  margin: 0;\n  background-color: rgb(243, 242, 242);\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  /* border-bottom: solid 1px; */\n`;\n","import React, { useState } from 'react';\nimport StatisticCardTitle from '../StatisticCardTitle/StatisticCardTitle';\nimport StatisticsSection from '../StatisticsSection/StatisticsSection';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport { StatisticCardContent } from './StatisticsCard.styles';\n\nexport default function StatisticCard() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = (option) => {\n\n    switch (option) {\n      case 'good':\n        setGood(Good => Good + 1);\n        break;\n      \n       case 'neutral':\n        setNeutral(Neutral => Neutral + 1);\n        break;\n      \n      case 'bad':\n        setBad(Bad => Bad + 1);\n        break;\n    \n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => Math.round((good * 100) / countTotalFeedback(good, neutral, bad));\n\n  return (\n          <StatisticsSection>\n            <StatisticCardContent>\n              <StatisticCardTitle title=\"Please leave feedback\" />\n\n              <FeedbackOptions\n                options={['good', 'neutral', 'bad']}\n                onLeaveFeedback={handleIncrement}\n              ></FeedbackOptions>\n\n              <StatisticCardTitle title=\"Statistics\" />\n\n              {countTotalFeedback() > 0 ? (\n                <Statistics\n                  good={good}\n                  neutral={neutral}\n                  bad={bad}\n                  total={countTotalFeedback()}\n                  positivePercentage={countPositiveFeedbackPercentage()}\n                />\n               ) : (\n                'No feedback given'\n               )} \n            </StatisticCardContent>\n          </StatisticsSection>\n       );\n}\n\n// export default class OldStatisticCard extends Component {\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  // };\n\n  // handleIncrement = option => {\n  //   this.setState({[option]: this.state[option] + 1,\n  //   });\n  // };\n\n  // countTotalFeedback = (good, neutral, bad) => good + neutral + bad;\n\n  // countPositiveFeedbackPercentage = (good, neutral, bad) =>\n  //   Math.round((good * 100) / this.countTotalFeedback(good, neutral, bad));\n\n  // render() {\n   // const { good, neutral, bad } = this.state;\n   // const total = this.countTotalFeedback(good, neutral, bad);\n   // const positivePercentage = this.countPositiveFeedbackPercentage(\n   //   good,\n   //   neutral,\n   //   bad,\n   // );\n\n    // return (\n    //   <StatisticsSection>\n    //     <StatisticCardContent>\n    //       <StatisticCardTitle title=\"Please leave feedback\" />\n\n    //       <FeedbackOptions\n    //         options={['good', 'neutral', 'bad']}\n    //         onLeaveFeedback={this.handleIncrement}\n    //       ></FeedbackOptions>\n\n    //       <StatisticCardTitle title=\"Statistics\" />\n\n    //       {total > 0 ? (\n    //         <Statistics\n    //           good={good}\n    //           neutral={neutral}\n    //           bad={bad}\n    //           total={total}\n    //           positivePercentage={positivePercentage}\n    //         />\n    //       ) : (\n    //         'No feedback given'\n    //       )}\n    //     </StatisticCardContent>\n    //   </StatisticsSection>\n    // );\n  // }\n// }\n","// import logo from './logo.svg';\nimport './App.css';\nimport StatisticCard from './components/StatisticsCard/StatisticsCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StatisticCard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}